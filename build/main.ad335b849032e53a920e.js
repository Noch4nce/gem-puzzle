!function(Q){var F={};function B(U){if(F[U])return F[U].exports;var n=F[U]={i:U,l:!1,exports:{}};return Q[U].call(n.exports,n,n.exports,B),n.l=!0,n.exports}B.m=Q,B.c=F,B.d=function(Q,F,U){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(B.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var n in Q)B.d(U,n,function(F){return Q[F]}.bind(null,n));return U},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./styles/css/style.css\n// extracted by mini-css-extract-plugin\n\n// CONCATENATED MODULE: ./styles/scss/main.scss\n// extracted by mini-css-extract-plugin\n\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\nfunction _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n// CONCATENATED MODULE: ./js/gem-puzzle.js\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = gem_puzzle_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction gem_puzzle_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return gem_puzzle_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return gem_puzzle_arrayLikeToArray(o, minLen); }\n\nfunction gem_puzzle_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable no-continue */\nvar gem_puzzle_Game = function Game(width, height, ui, gameContainer) {\n  var _this = this;\n\n  _classCallCheck(this, Game);\n\n  _defineProperty(this, "generateGame", function () {\n    _this.gameState = [];\n    _this.turns = 0;\n    _this.gameStart = new Date();\n    var number = 1;\n\n    for (var i = 0; i < _this.height; i += 1) {\n      var _row = [];\n\n      for (var j = 0; j < _this.width; j += 1) {\n        _row.push({\n          number: number,\n          canClick: false\n        });\n\n        number += 1;\n      }\n\n      _this.gameState.push(_row);\n    }\n\n    _this.empty = [_this.height - 1, _this.width - 1];\n\n    var _this$empty = _slicedToArray(_this.empty, 2),\n        row = _this$empty[0],\n        column = _this$empty[1];\n\n    _this.gameState[row][column] = {\n      number: \'*\',\n      canClick: false\n    };\n\n    _this.random();\n\n    _this.findEmptyCell();\n\n    _this.setEventClick();\n  });\n\n  _defineProperty(this, "random", function () {\n    var getShuffled = _this.setRandom();\n\n    _this.setShuffled(getShuffled);\n  });\n\n  _defineProperty(this, "setRandom", function () {\n    var arr = _this.gameState.flat();\n\n    var shuffled = arr.sort(function () {\n      return Math.random() - 0.5;\n    });\n    return shuffled;\n  });\n\n  _defineProperty(this, "setShuffled", function (shuffled) {\n    var count = 0;\n\n    for (var horizontal = 0; horizontal < _this.height; horizontal += 1) {\n      for (var column = 0; column < _this.width; column += 1) {\n        _this.gameState[horizontal][column] = shuffled[count];\n        count += 1;\n      }\n    }\n  });\n\n  _defineProperty(this, "findEmptyCell", function () {\n    var emptyCoor = [];\n\n    for (var i = 0; i < _this.height; i += 1) {\n      for (var k = 0; k < _this.width; k += 1) {\n        if (_this.gameState[i][k].number === \'*\') {\n          emptyCoor.push(i, k);\n        }\n      }\n    }\n\n    _this.empty = emptyCoor;\n  });\n\n  _defineProperty(this, "setEventClick", function () {\n    _this.setAllUnClickable();\n\n    var clickCoordinates = _this.getClick();\n\n    var filterCoordinates = _this.filterClick(clickCoordinates);\n\n    _this.setClickable(filterCoordinates);\n  });\n\n  _defineProperty(this, "setAllUnClickable", function () {\n    var _iterator = _createForOfIteratorHelper(_this.gameState),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var row = _step.value;\n\n        var _iterator2 = _createForOfIteratorHelper(row),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var cell = _step2.value;\n            cell.canClick = false;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  });\n\n  _defineProperty(this, "getClick", function () {\n    var _this$empty2 = _slicedToArray(_this.empty, 2),\n        row = _this$empty2[0],\n        column = _this$empty2[1];\n\n    return [[row - 1, column], [row + 1, column], [row, column - 1], [row, column + 1]];\n  });\n\n  _defineProperty(this, "filterClick", function (clickCoordinates) {\n    var out = [];\n\n    var _iterator3 = _createForOfIteratorHelper(clickCoordinates),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var coordinate = _step3.value;\n\n        var _coordinate = _slicedToArray(coordinate, 2),\n            row = _coordinate[0],\n            column = _coordinate[1];\n\n        if (row >= 0 && row < _this.height && column >= 0 && column < _this.width) {\n          out.push(coordinate);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return out;\n  });\n\n  _defineProperty(this, "setClickable", function (filterCoordinates) {\n    var _iterator4 = _createForOfIteratorHelper(filterCoordinates),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var coordinate = _step4.value;\n\n        var _coordinate2 = _slicedToArray(coordinate, 2),\n            row = _coordinate2[0],\n            column = _coordinate2[1];\n\n        var cell = _this.gameState[row][column];\n        cell.canClick = true;\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  });\n\n  _defineProperty(this, "handleClick", function (cell) {\n    _this.turns += 1;\n\n    var coor2 = _this.getCellCoord(cell);\n\n    _this.swapCells(_this.empty, coor2);\n\n    _this.empty = coor2;\n\n    _this.setEventClick();\n\n    _this.checkIsFinished();\n\n    _this.ui.draw(_this);\n  });\n\n  _defineProperty(this, "getCellCoord", function (cell) {\n    for (var row = 0; row < _this.height; row += 1) {\n      for (var column = 0; column < _this.width; column += 1) {\n        var currentCell = _this.gameState[row][column];\n        if (currentCell === cell) return [row, column];\n      }\n    }\n\n    return true;\n  });\n\n  _defineProperty(this, "swapCells", function (coor1, coor2) {\n    var _coor = _slicedToArray(coor1, 2),\n        row = _coor[0],\n        column = _coor[1];\n\n    var _coor2 = _slicedToArray(coor2, 2),\n        row2 = _coor2[0],\n        column2 = _coor2[1];\n\n    var cell1 = _this.gameState[row][column];\n    var cell2 = _this.gameState[row2][column2];\n    _this.gameState[row][column] = cell2;\n    _this.gameState[row2][column2] = cell1;\n  });\n\n  _defineProperty(this, "checkIsFinished", function () {\n    if (_this.checkCellsArranged() && !_this.solved) {\n      _this.solved = true;\n      _this.solvedTime = new Date() - _this.gameStart;\n\n      _this.gameContainer.ladder.addNewResult(_this.turns, _this.solvedTime);\n    }\n  });\n\n  _defineProperty(this, "checkCellsArranged", function () {\n    var count = 0;\n\n    var _iterator5 = _createForOfIteratorHelper(_this.gameState.flat()),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var cell = _step5.value;\n        count += 1;\n\n        if (cell.number === \'*\') {\n          continue;\n        } else if (cell.number !== count) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    return true;\n  });\n\n  this.width = width;\n  this.height = height;\n  this.ui = ui;\n  this.gameContainer = gameContainer;\n  this.generateGame();\n  if (ui) ui.draw(this);\n};\n\n\n// CONCATENATED MODULE: ./js/gem-ui.js\n\n\n\nfunction gem_ui_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = gem_ui_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction gem_ui_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return gem_ui_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return gem_ui_arrayLikeToArray(o, minLen); }\n\nfunction gem_ui_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar gem_ui_Ui = function Ui(rootEl, gameContainer) {\n  var _this = this;\n\n  _classCallCheck(this, Ui);\n\n  _defineProperty(this, "generateEl", function (tag, classes, text, parent) {\n    var el = document.createElement(tag);\n\n    var _iterator = gem_ui_createForOfIteratorHelper(classes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var c = _step.value;\n        el.classList.add(c);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (text) {\n      el.innerHTML = text;\n    }\n\n    if (parent) {\n      parent.appendChild(el);\n    }\n\n    return el;\n  });\n\n  _defineProperty(this, "draw", function (game) {\n    _this.clear();\n\n    _this.drawBoard(game);\n\n    _this.addGameInfo(game);\n\n    _this.addGameControls(game);\n\n    _this.drawLadder();\n  });\n\n  _defineProperty(this, "drawBoard", function (game) {\n    var gameBoard = _this.generateEl(\'div\', [\'gameboard\'], \'Gem-puzzle\', _this.rootEl);\n\n    var _iterator2 = gem_ui_createForOfIteratorHelper(game.gameState),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var row = _step2.value;\n\n        var rowEl = _this.generateEl(\'div\', [\'row\'], null, gameBoard);\n\n        var _iterator3 = gem_ui_createForOfIteratorHelper(row),\n            _step3;\n\n        try {\n          var _loop = function _loop() {\n            var cell = _step3.value;\n\n            if (cell.canClick && !game.solved) {\n              var clickable = _this.generateEl(\'div\', [\'cell\', \'clickable\'], cell.number, rowEl);\n\n              clickable.addEventListener(\'click\', function () {\n                if (_this.gameContainer.soundEnabled) {\n                  _this.playAudio();\n                }\n\n                game.handleClick(cell);\n              });\n            } else if (cell.number === \'*\') {\n              _this.generateEl(\'div\', [\'cell\', \'empty\'], cell.number, rowEl);\n            } else {\n              _this.generateEl(\'div\', [\'cell\'], cell.number, rowEl);\n            }\n          };\n\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  });\n\n  _defineProperty(this, "addGameInfo", function (game) {\n    _this.generateEl(\'div\', [\'turns\'], "Turn: ".concat(game.turns), _this.rootEl);\n\n    _this.gameStart = game.gameStart;\n\n    _this.zero();\n\n    _this.timerEl = _this.generateEl(\'div\', [\'time\'], _this.formatTime(game), _this.rootEl);\n\n    if (game.solved) {\n      _this.generateEl(\'h2\', [\'finish\'], "You won! Turn: ".concat(game.turns, " ").concat(_this.formatTime(game)), _this.rootEl);\n    } else {\n      _this.timer = setInterval(_this.updTime);\n    }\n  });\n\n  _defineProperty(this, "addGameControls", function (game) {\n    _this.addStartBtn();\n\n    _this.addGridControls();\n\n    _this.addSoundControl(game);\n  });\n\n  _defineProperty(this, "addStartBtn", function () {\n    var startBtn = _this.generateEl(\'div\', [\'start\'], \'Start Game\', _this.rootEl);\n\n    startBtn.addEventListener(\'click\', function () {\n      _this.gameContainer.startGame();\n    });\n  });\n\n  _defineProperty(this, "addGridControls", function () {\n    var wrapper = _this.generateEl(\'div\', [\'wrapper_field\'], \'\', _this.rootEl);\n\n    _this.addGridControlBtn(-1, \'width\', 3, 8, wrapper);\n\n    _this.generateEl(\'div\', [\'width\'], "".concat(_this.gameContainer.width), wrapper);\n\n    _this.addGridControlBtn(1, \'width\', 3, 8, wrapper);\n\n    _this.addGridControlBtn(-1, \'height\', 3, 8, wrapper);\n\n    _this.generateEl(\'div\', [\'height\'], "".concat(_this.gameContainer.height), wrapper);\n\n    _this.addGridControlBtn(1, \'height\', 3, 8, wrapper);\n  });\n\n  _defineProperty(this, "addGridControlBtn", function (operation, attribute, min, max, wrapper) {\n    var currentValue = _this.gameContainer[attribute];\n    var nextValue = currentValue + operation;\n    var text = operation > 0 ? \'+\' : \'-\';\n\n    var btn = _this.generateEl(\'span\', [\'operation\'], text, wrapper);\n\n    if (nextValue >= min && nextValue <= max) {\n      btn.addEventListener(\'click\', function () {\n        _this.gameContainer[attribute] = nextValue;\n\n        _this.gameContainer.startGame();\n      });\n    }\n  });\n\n  _defineProperty(this, "playAudio", function () {\n    var url = \'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\';\n    new Audio(url).play();\n  });\n\n  _defineProperty(this, "addSoundControl", function (game) {\n    var text = _this.gameContainer.soundEnabled ? \'mute\' : \'unmute\';\n\n    var btn = _this.generateEl(\'div\', [\'mute\'], text, _this.rootEl);\n\n    btn.addEventListener(\'click\', function () {\n      _this.gameContainer.soundEnabled = !_this.gameContainer.soundEnabled;\n\n      _this.draw(game);\n    });\n  });\n\n  _defineProperty(this, "drawLadder", function () {\n    var state = _this.gameContainer.ladder.state;\n\n    var results = _this.generateEl(\'div\', [\'ladder\'], \'Best Result\', _this.rootEl);\n\n    var _iterator4 = gem_ui_createForOfIteratorHelper(state),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var result = _step4.value;\n\n        _this.generateEl(\'div\', [\'score\'], "Turn: ".concat(result.moves, " Time: ").concat(parseInt(result.time / 3600 / 60 / 24 % 24, 10), "h ").concat(parseInt(result.time / 1000 / 60 % 60, 10), "m ").concat(parseInt(result.time / 1000 % 60, 10), "s"), results);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  });\n\n  _defineProperty(this, "updTime", function () {\n    _this.timerEl.innerHTML = _this.formatTime();\n  });\n\n  _defineProperty(this, "zero", function (number) {\n    return (parseInt(number, 10) < 10 ? \'0\' : \'\') + number;\n  });\n\n  _defineProperty(this, "formatTime", function (game) {\n    var delta;\n\n    if (game && game.solved) {\n      delta = game.solvedTime;\n    } else {\n      var currnetTime = new Date();\n      delta = currnetTime - _this.gameStart;\n    }\n\n    var h = parseInt(delta / 3600 / 60 / 24 % 24, 10);\n    var m = parseInt(delta / 1000 / 60 % 60, 10);\n    var s = parseInt(delta / 1000 % 60, 10);\n    return "Time: ".concat(_this.zero(h), ":").concat(_this.zero(m), ":").concat(_this.zero(s));\n  });\n\n  _defineProperty(this, "clear", function () {\n    _this.rootEl.innerHTML = \'\';\n    if (_this.timer) clearInterval(_this.timer);\n  });\n\n  this.rootEl = document.createElement(\'div\');\n  this.gameContainer = gameContainer;\n  document.body.appendChild(this.rootEl);\n};\n\n\n// CONCATENATED MODULE: ./js/ladder.js\n\n\n\nfunction set(name, value) {\n  window.localStorage.setItem(name, JSON.stringify(value));\n}\n\nfunction get(name) {\n  var subst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return JSON.parse(window.localStorage.getItem(name) || subst);\n}\n\nvar ladder_Ladder = function Ladder() {\n  var _this = this;\n\n  _classCallCheck(this, Ladder);\n\n  _defineProperty(this, "addNewResult", function (moves, time) {\n    _this.state.push({\n      moves: moves,\n      time: time\n    });\n\n    _this.state.sort(function (a, b) {\n      if (a.moves === b.moves) {\n        return a.time - b.time;\n      }\n\n      return a.moves - b.moves;\n    });\n\n    while (_this.state.length > _this.max) {\n      _this.state.pop();\n    }\n\n    set(\'ladder\', _this.state);\n  });\n\n  this.state = get(\'ladder\', \'[]\');\n  this.max = 10;\n};\n\n\n// CONCATENATED MODULE: ./js/gameContainer.js\n\n\n\n\n\n\nvar gameContainer_GameContainer = function GameContainer() {\n  var _this = this;\n\n  _classCallCheck(this, GameContainer);\n\n  _defineProperty(this, "startGame", function () {\n    _this.gameMain = new gem_puzzle_Game(_this.width, _this.height, _this.ui, _this);\n  });\n\n  this.ui = new gem_ui_Ui(\'rootEl\', this);\n  this.width = 4;\n  this.height = 4;\n  this.soundEnabled = false;\n  this.ladder = new ladder_Ladder();\n  this.startGame();\n};\n\n\n// CONCATENATED MODULE: ./js/index.js\n\n // import images from "../assets/image/bg.png";\n\n\nvar js_gameContainer = new gameContainer_GameContainer();\nconsole.log(js_gameContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvY3NzL3N0eWxlLmNzcz8yMTNkIiwid2VicGFjazovLy8uL3N0eWxlcy9zY3NzL21haW4uc2Nzcz82ZjY4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcz9kNGVjIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcz9hZGUzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhIb2xlcy5qcz8wZDIxIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcz8wOWYwIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzPzZiNzUiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzPzA2YzUiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlUmVzdC5qcz8zZDhjIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzPzM4MzUiLCJ3ZWJwYWNrOi8vLy4vanMvZ2VtLXB1enpsZS5qcz9iNTI1Iiwid2VicGFjazovLy8uL2pzL2dlbS11aS5qcz82OTQwIiwid2VicGFjazovLy8uL2pzL2xhZGRlci5qcz8yMTI2Iiwid2VicGFjazovLy8uL2pzL2dhbWVDb250YWluZXIuanM/ZGVkOSIsIndlYnBhY2s6Ly8vLi9qcy9pbmRleC5qcz9lZTFjIl0sIm5hbWVzIjpbIkdhbWUiLCJ3aWR0aCIsImhlaWdodCIsInVpIiwiZ2FtZUNvbnRhaW5lciIsImdhbWVTdGF0ZSIsInR1cm5zIiwiZ2FtZVN0YXJ0IiwiRGF0ZSIsIm51bWJlciIsImkiLCJyb3ciLCJqIiwicHVzaCIsImNhbkNsaWNrIiwiZW1wdHkiLCJjb2x1bW4iLCJyYW5kb20iLCJmaW5kRW1wdHlDZWxsIiwic2V0RXZlbnRDbGljayIsImdldFNodWZmbGVkIiwic2V0UmFuZG9tIiwic2V0U2h1ZmZsZWQiLCJhcnIiLCJmbGF0Iiwic2h1ZmZsZWQiLCJzb3J0IiwiTWF0aCIsImNvdW50IiwiaG9yaXpvbnRhbCIsImVtcHR5Q29vciIsImsiLCJzZXRBbGxVbkNsaWNrYWJsZSIsImNsaWNrQ29vcmRpbmF0ZXMiLCJnZXRDbGljayIsImZpbHRlckNvb3JkaW5hdGVzIiwiZmlsdGVyQ2xpY2siLCJzZXRDbGlja2FibGUiLCJjZWxsIiwib3V0IiwiY29vcmRpbmF0ZSIsImNvb3IyIiwiZ2V0Q2VsbENvb3JkIiwic3dhcENlbGxzIiwiY2hlY2tJc0ZpbmlzaGVkIiwiZHJhdyIsImN1cnJlbnRDZWxsIiwiY29vcjEiLCJyb3cyIiwiY29sdW1uMiIsImNlbGwxIiwiY2VsbDIiLCJjaGVja0NlbGxzQXJyYW5nZWQiLCJzb2x2ZWQiLCJzb2x2ZWRUaW1lIiwibGFkZGVyIiwiYWRkTmV3UmVzdWx0IiwiZ2VuZXJhdGVHYW1lIiwiVWkiLCJyb290RWwiLCJ0YWciLCJjbGFzc2VzIiwidGV4dCIsInBhcmVudCIsImVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYyIsImNsYXNzTGlzdCIsImFkZCIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwiZ2FtZSIsImNsZWFyIiwiZHJhd0JvYXJkIiwiYWRkR2FtZUluZm8iLCJhZGRHYW1lQ29udHJvbHMiLCJkcmF3TGFkZGVyIiwiZ2FtZUJvYXJkIiwiZ2VuZXJhdGVFbCIsInJvd0VsIiwiY2xpY2thYmxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNvdW5kRW5hYmxlZCIsInBsYXlBdWRpbyIsImhhbmRsZUNsaWNrIiwiemVybyIsInRpbWVyRWwiLCJmb3JtYXRUaW1lIiwidGltZXIiLCJzZXRJbnRlcnZhbCIsInVwZFRpbWUiLCJhZGRTdGFydEJ0biIsImFkZEdyaWRDb250cm9scyIsImFkZFNvdW5kQ29udHJvbCIsInN0YXJ0QnRuIiwic3RhcnRHYW1lIiwid3JhcHBlciIsImFkZEdyaWRDb250cm9sQnRuIiwib3BlcmF0aW9uIiwiYXR0cmlidXRlIiwibWluIiwibWF4IiwiY3VycmVudFZhbHVlIiwibmV4dFZhbHVlIiwiYnRuIiwidXJsIiwiQXVkaW8iLCJwbGF5Iiwic3RhdGUiLCJyZXN1bHRzIiwicmVzdWx0IiwibW92ZXMiLCJwYXJzZUludCIsInRpbWUiLCJkZWx0YSIsImN1cnJuZXRUaW1lIiwiaCIsIm0iLCJzIiwiY2xlYXJJbnRlcnZhbCIsImJvZHkiLCJzZXQiLCJuYW1lIiwidmFsdWUiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImdldCIsInN1YnN0IiwicGFyc2UiLCJnZXRJdGVtIiwiTGFkZGVyIiwiYSIsImIiLCJsZW5ndGgiLCJwb3AiLCJHYW1lQ29udGFpbmVyIiwiZ2FtZU1haW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztBQ0FBOzs7QUNBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLEM7O0FDSmU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxDOztBQ2JlO0FBQ2Y7QUFDQSxDOztBQ0ZlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZDQUE2QywrQkFBK0I7QUFDNUU7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztB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QUFjLElBQUkrRSxhQUFKLEVBQWQ7QUFDQSxPQUFLdEMsU0FBTDtBQUNILEM7Ozs7QUNaTDtDQUVBOztBQUNBO0FBRUEsSUFBTTVGLGdCQUFhLEdBQUcsSUFBSXVJLDJCQUFKLEVBQXRCO0FBQ0FFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZMUksZ0JBQVoiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuICB2YXIgX2UgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHtcbiAgICBhcnIyW2ldID0gYXJyW2ldO1xuICB9XG5cbiAgcmV0dXJuIGFycjI7XG59IiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXlcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn0iLCJpbXBvcnQgYXJyYXlXaXRoSG9sZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5TGltaXQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0XCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5XCI7XG5pbXBvcnQgbm9uSXRlcmFibGVSZXN0IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3RcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59IiwiLyogZXNsaW50LWRpc2FibGUgbm8tY29udGludWUgKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWUge1xuICAgIGNvbnN0cnVjdG9yKHdpZHRoLCBoZWlnaHQsIHVpLCBnYW1lQ29udGFpbmVyKSB7XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIHRoaXMudWkgPSB1aTtcbiAgICAgICAgdGhpcy5nYW1lQ29udGFpbmVyID0gZ2FtZUNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUdhbWUoKTtcbiAgICAgICAgaWYgKHVpKSB1aS5kcmF3KHRoaXMpO1xuICAgIH1cblxuICAgIGdlbmVyYXRlR2FtZSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5nYW1lU3RhdGUgPSBbXTtcbiAgICAgICAgdGhpcy50dXJucyA9IDA7XG4gICAgICAgIHRoaXMuZ2FtZVN0YXJ0ID0gbmV3IERhdGUoKTtcbiAgICAgICAgbGV0IG51bWJlciA9IDE7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5oZWlnaHQ7IGkgKz0gMSkge1xuICAgICAgICAgICAgY29uc3Qgcm93ID0gW107XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMud2lkdGg7IGogKz0gMSkge1xuICAgICAgICAgICAgICAgIHJvdy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICBjYW5DbGljazogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgbnVtYmVyICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmdhbWVTdGF0ZS5wdXNoKHJvdyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lbXB0eSA9IFt0aGlzLmhlaWdodCAtIDEsIHRoaXMud2lkdGggLSAxXTtcbiAgICAgICAgY29uc3QgW3JvdywgY29sdW1uXSA9IHRoaXMuZW1wdHk7XG4gICAgICAgIHRoaXMuZ2FtZVN0YXRlW3Jvd11bY29sdW1uXSA9IHtcbiAgICAgICAgICAgIG51bWJlcjogJyonLFxuICAgICAgICAgICAgY2FuQ2xpY2s6IGZhbHNlLFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMucmFuZG9tKCk7XG4gICAgICAgIHRoaXMuZmluZEVtcHR5Q2VsbCgpO1xuICAgICAgICB0aGlzLnNldEV2ZW50Q2xpY2soKTtcbiAgICB9O1xuXG4gICAgcmFuZG9tID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBnZXRTaHVmZmxlZCA9IHRoaXMuc2V0UmFuZG9tKCk7XG4gICAgICAgIHRoaXMuc2V0U2h1ZmZsZWQoZ2V0U2h1ZmZsZWQpO1xuICAgIH1cblxuICAgIHNldFJhbmRvbSA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgYXJyID0gdGhpcy5nYW1lU3RhdGUuZmxhdCgpO1xuICAgICAgICBjb25zdCBzaHVmZmxlZCA9IGFyci5zb3J0KCgpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpO1xuXG4gICAgICAgIHJldHVybiBzaHVmZmxlZDtcbiAgICB9XG5cbiAgICBzZXRTaHVmZmxlZCA9IChzaHVmZmxlZCkgPT4ge1xuICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICBmb3IgKGxldCBob3Jpem9udGFsID0gMDsgaG9yaXpvbnRhbCA8IHRoaXMuaGVpZ2h0OyBob3Jpem9udGFsICs9IDEpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGNvbHVtbiA9IDA7IGNvbHVtbiA8IHRoaXMud2lkdGg7IGNvbHVtbiArPSAxKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lU3RhdGVbaG9yaXpvbnRhbF1bY29sdW1uXSA9IHNodWZmbGVkW2NvdW50XTtcbiAgICAgICAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZpbmRFbXB0eUNlbGwgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGVtcHR5Q29vciA9IFtdO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5oZWlnaHQ7IGkgKz0gMSkge1xuICAgICAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCB0aGlzLndpZHRoOyBrICs9IDEpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lU3RhdGVbaV1ba10ubnVtYmVyID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICAgICAgZW1wdHlDb29yLnB1c2goaSwgayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5lbXB0eSA9IGVtcHR5Q29vcjtcbiAgICB9XG5cbiAgICBzZXRFdmVudENsaWNrID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldEFsbFVuQ2xpY2thYmxlKCk7XG4gICAgICAgIGNvbnN0IGNsaWNrQ29vcmRpbmF0ZXMgPSB0aGlzLmdldENsaWNrKCk7XG4gICAgICAgIGNvbnN0IGZpbHRlckNvb3JkaW5hdGVzID0gdGhpcy5maWx0ZXJDbGljayhjbGlja0Nvb3JkaW5hdGVzKTtcbiAgICAgICAgdGhpcy5zZXRDbGlja2FibGUoZmlsdGVyQ29vcmRpbmF0ZXMpO1xuICAgIH07XG5cbiAgICBzZXRBbGxVbkNsaWNrYWJsZSA9ICgpID0+IHtcbiAgICAgICAgZm9yIChjb25zdCByb3cgb2YgdGhpcy5nYW1lU3RhdGUpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2VsbCBvZiByb3cpIHtcbiAgICAgICAgICAgICAgICBjZWxsLmNhbkNsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgZ2V0Q2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IFtyb3csIGNvbHVtbl0gPSB0aGlzLmVtcHR5O1xuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBbcm93IC0gMSwgY29sdW1uXSxcbiAgICAgICAgICAgIFtyb3cgKyAxLCBjb2x1bW5dLFxuICAgICAgICAgICAgW3JvdywgY29sdW1uIC0gMV0sXG4gICAgICAgICAgICBbcm93LCBjb2x1bW4gKyAxXSxcbiAgICAgICAgXTtcbiAgICB9O1xuXG4gICAgZmlsdGVyQ2xpY2sgPSAoY2xpY2tDb29yZGluYXRlcykgPT4ge1xuICAgICAgICBjb25zdCBvdXQgPSBbXTtcblxuICAgICAgICBmb3IgKGNvbnN0IGNvb3JkaW5hdGUgb2YgY2xpY2tDb29yZGluYXRlcykge1xuICAgICAgICAgICAgY29uc3QgW3JvdywgY29sdW1uXSA9IGNvb3JkaW5hdGU7XG4gICAgICAgICAgICBpZiAocm93ID49IDAgJiYgcm93IDwgdGhpcy5oZWlnaHQgJiYgY29sdW1uID49IDAgJiYgY29sdW1uIDwgdGhpcy53aWR0aCkge1xuICAgICAgICAgICAgICAgIG91dC5wdXNoKGNvb3JkaW5hdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9O1xuXG4gICAgc2V0Q2xpY2thYmxlID0gKGZpbHRlckNvb3JkaW5hdGVzKSA9PiB7XG4gICAgICAgIGZvciAoY29uc3QgY29vcmRpbmF0ZSBvZiBmaWx0ZXJDb29yZGluYXRlcykge1xuICAgICAgICAgICAgY29uc3QgW3JvdywgY29sdW1uXSA9IGNvb3JkaW5hdGU7XG4gICAgICAgICAgICBjb25zdCBjZWxsID0gdGhpcy5nYW1lU3RhdGVbcm93XVtjb2x1bW5dO1xuICAgICAgICAgICAgY2VsbC5jYW5DbGljayA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgaGFuZGxlQ2xpY2sgPSAoY2VsbCkgPT4ge1xuICAgICAgICB0aGlzLnR1cm5zICs9IDE7XG4gICAgICAgIGNvbnN0IGNvb3IyID0gdGhpcy5nZXRDZWxsQ29vcmQoY2VsbCk7XG4gICAgICAgIHRoaXMuc3dhcENlbGxzKHRoaXMuZW1wdHksIGNvb3IyKTtcbiAgICAgICAgdGhpcy5lbXB0eSA9IGNvb3IyO1xuICAgICAgICB0aGlzLnNldEV2ZW50Q2xpY2soKTtcbiAgICAgICAgdGhpcy5jaGVja0lzRmluaXNoZWQoKTtcbiAgICAgICAgdGhpcy51aS5kcmF3KHRoaXMpO1xuICAgIH1cblxuICAgIGdldENlbGxDb29yZCA9IChjZWxsKSA9PiB7XG4gICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuaGVpZ2h0OyByb3cgKz0gMSkge1xuICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uID0gMDsgY29sdW1uIDwgdGhpcy53aWR0aDsgY29sdW1uICs9IDEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50Q2VsbCA9IHRoaXMuZ2FtZVN0YXRlW3Jvd11bY29sdW1uXTtcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudENlbGwgPT09IGNlbGwpIHJldHVybiBbcm93LCBjb2x1bW5dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG5cbiAgICBzd2FwQ2VsbHMgPSAoY29vcjEsIGNvb3IyKSA9PiB7XG4gICAgICAgIGNvbnN0IFtyb3csIGNvbHVtbl0gPSBjb29yMTtcbiAgICAgICAgY29uc3QgW3JvdzIsIGNvbHVtbjJdID0gY29vcjI7XG4gICAgICAgIGNvbnN0IGNlbGwxID0gdGhpcy5nYW1lU3RhdGVbcm93XVtjb2x1bW5dO1xuICAgICAgICBjb25zdCBjZWxsMiA9IHRoaXMuZ2FtZVN0YXRlW3JvdzJdW2NvbHVtbjJdO1xuXG4gICAgICAgIHRoaXMuZ2FtZVN0YXRlW3Jvd11bY29sdW1uXSA9IGNlbGwyO1xuICAgICAgICB0aGlzLmdhbWVTdGF0ZVtyb3cyXVtjb2x1bW4yXSA9IGNlbGwxO1xuICAgIH1cblxuICAgIGNoZWNrSXNGaW5pc2hlZCA9ICgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuY2hlY2tDZWxsc0FycmFuZ2VkKCkgJiYgIXRoaXMuc29sdmVkKSB7XG4gICAgICAgICAgICB0aGlzLnNvbHZlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnNvbHZlZFRpbWUgPSBuZXcgRGF0ZSgpIC0gdGhpcy5nYW1lU3RhcnQ7XG4gICAgICAgICAgICB0aGlzLmdhbWVDb250YWluZXIubGFkZGVyLmFkZE5ld1Jlc3VsdCh0aGlzLnR1cm5zLCB0aGlzLnNvbHZlZFRpbWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2hlY2tDZWxsc0FycmFuZ2VkID0gKCkgPT4ge1xuICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IGNlbGwgb2YgdGhpcy5nYW1lU3RhdGUuZmxhdCgpKSB7XG4gICAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICAgICAgaWYgKGNlbGwubnVtYmVyID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2VsbC5udW1iZXIgIT09IGNvdW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVpIHtcbiAgICBjb25zdHJ1Y3Rvcihyb290RWwsIGdhbWVDb250YWluZXIpIHtcbiAgICAgICAgdGhpcy5yb290RWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGhpcy5nYW1lQ29udGFpbmVyID0gZ2FtZUNvbnRhaW5lcjtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLnJvb3RFbCk7XG4gICAgfVxuXG4gICAgZ2VuZXJhdGVFbCA9ICh0YWcsIGNsYXNzZXMsIHRleHQsIHBhcmVudCkgPT4ge1xuICAgICAgICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbiAgICAgICAgZm9yIChjb25zdCBjIG9mIGNsYXNzZXMpIHtcbiAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoYyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgICAgIGVsLmlubmVySFRNTCA9IHRleHQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICAgICAgcGFyZW50LmFwcGVuZENoaWxkKGVsKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWw7XG4gICAgfVxuXG4gICAgZHJhdyA9IChnYW1lKSA9PiB7XG4gICAgICAgIHRoaXMuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5kcmF3Qm9hcmQoZ2FtZSk7XG4gICAgICAgIHRoaXMuYWRkR2FtZUluZm8oZ2FtZSk7XG4gICAgICAgIHRoaXMuYWRkR2FtZUNvbnRyb2xzKGdhbWUpO1xuICAgICAgICB0aGlzLmRyYXdMYWRkZXIoKTtcbiAgICB9XG5cbiAgICBkcmF3Qm9hcmQgPSAoZ2FtZSkgPT4ge1xuICAgICAgICBjb25zdCBnYW1lQm9hcmQgPSB0aGlzLmdlbmVyYXRlRWwoJ2RpdicsIFsnZ2FtZWJvYXJkJ10sICdHZW0tcHV6emxlJywgdGhpcy5yb290RWwpO1xuICAgICAgICBmb3IgKGNvbnN0IHJvdyBvZiBnYW1lLmdhbWVTdGF0ZSkge1xuICAgICAgICAgICAgY29uc3Qgcm93RWwgPSB0aGlzLmdlbmVyYXRlRWwoJ2RpdicsIFsncm93J10sIG51bGwsIGdhbWVCb2FyZCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNlbGwgb2Ygcm93KSB7XG4gICAgICAgICAgICAgICAgaWYgKGNlbGwuY2FuQ2xpY2sgJiYgIWdhbWUuc29sdmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrYWJsZSA9IHRoaXMuZ2VuZXJhdGVFbCgnZGl2JywgWydjZWxsJywgJ2NsaWNrYWJsZSddLCBjZWxsLm51bWJlciwgcm93RWwpO1xuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lQ29udGFpbmVyLnNvdW5kRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGxheUF1ZGlvKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBnYW1lLmhhbmRsZUNsaWNrKGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNlbGwubnVtYmVyID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUVsKCdkaXYnLCBbJ2NlbGwnLCAnZW1wdHknXSwgY2VsbC5udW1iZXIsIHJvd0VsKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlRWwoJ2RpdicsIFsnY2VsbCddLCBjZWxsLm51bWJlciwgcm93RWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZEdhbWVJbmZvID0gKGdhbWUpID0+IHtcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUVsKCdkaXYnLCBbJ3R1cm5zJ10sIGBUdXJuOiAke2dhbWUudHVybnN9YCwgdGhpcy5yb290RWwpO1xuICAgICAgICB0aGlzLmdhbWVTdGFydCA9IGdhbWUuZ2FtZVN0YXJ0O1xuICAgICAgICB0aGlzLnplcm8oKTtcbiAgICAgICAgdGhpcy50aW1lckVsID0gdGhpcy5nZW5lcmF0ZUVsKCdkaXYnLCBbJ3RpbWUnXSwgdGhpcy5mb3JtYXRUaW1lKGdhbWUpLCB0aGlzLnJvb3RFbCk7XG4gICAgICAgIGlmIChnYW1lLnNvbHZlZCkge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUVsKCdoMicsIFsnZmluaXNoJ10sIGBZb3Ugd29uISBUdXJuOiAke2dhbWUudHVybnN9ICR7dGhpcy5mb3JtYXRUaW1lKGdhbWUpfWAsIHRoaXMucm9vdEVsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLnVwZFRpbWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkR2FtZUNvbnRyb2xzID0gKGdhbWUpID0+IHtcbiAgICAgICAgdGhpcy5hZGRTdGFydEJ0bigpO1xuICAgICAgICB0aGlzLmFkZEdyaWRDb250cm9scygpO1xuICAgICAgICB0aGlzLmFkZFNvdW5kQ29udHJvbChnYW1lKTtcbiAgICB9XG5cbiAgICBhZGRTdGFydEJ0biA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qgc3RhcnRCdG4gPSB0aGlzLmdlbmVyYXRlRWwoJ2RpdicsIFsnc3RhcnQnXSwgJ1N0YXJ0IEdhbWUnLCB0aGlzLnJvb3RFbCk7XG4gICAgICAgIHN0YXJ0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5nYW1lQ29udGFpbmVyLnN0YXJ0R2FtZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBhZGRHcmlkQ29udHJvbHMgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHdyYXBwZXIgPSB0aGlzLmdlbmVyYXRlRWwoJ2RpdicsIFsnd3JhcHBlcl9maWVsZCddLCAnJywgdGhpcy5yb290RWwpO1xuICAgICAgICB0aGlzLmFkZEdyaWRDb250cm9sQnRuKC0xLCAnd2lkdGgnLCAzLCA4LCB3cmFwcGVyKTtcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUVsKCdkaXYnLCBbJ3dpZHRoJ10sIGAke3RoaXMuZ2FtZUNvbnRhaW5lci53aWR0aH1gLCB3cmFwcGVyKTtcbiAgICAgICAgdGhpcy5hZGRHcmlkQ29udHJvbEJ0bigxLCAnd2lkdGgnLCAzLCA4LCB3cmFwcGVyKTtcbiAgICAgICAgdGhpcy5hZGRHcmlkQ29udHJvbEJ0bigtMSwgJ2hlaWdodCcsIDMsIDgsIHdyYXBwZXIpO1xuICAgICAgICB0aGlzLmdlbmVyYXRlRWwoJ2RpdicsIFsnaGVpZ2h0J10sIGAke3RoaXMuZ2FtZUNvbnRhaW5lci5oZWlnaHR9YCwgd3JhcHBlcik7XG4gICAgICAgIHRoaXMuYWRkR3JpZENvbnRyb2xCdG4oMSwgJ2hlaWdodCcsIDMsIDgsIHdyYXBwZXIpO1xuICAgIH1cblxuICAgIGFkZEdyaWRDb250cm9sQnRuID0gKG9wZXJhdGlvbiwgYXR0cmlidXRlLCBtaW4sIG1heCwgd3JhcHBlcikgPT4ge1xuICAgICAgICBjb25zdCBjdXJyZW50VmFsdWUgPSB0aGlzLmdhbWVDb250YWluZXJbYXR0cmlidXRlXTtcbiAgICAgICAgY29uc3QgbmV4dFZhbHVlID0gY3VycmVudFZhbHVlICsgb3BlcmF0aW9uO1xuICAgICAgICBjb25zdCB0ZXh0ID0gb3BlcmF0aW9uID4gMCA/ICcrJyA6ICctJztcbiAgICAgICAgY29uc3QgYnRuID0gdGhpcy5nZW5lcmF0ZUVsKCdzcGFuJywgWydvcGVyYXRpb24nXSwgdGV4dCwgd3JhcHBlcik7XG5cbiAgICAgICAgaWYgKG5leHRWYWx1ZSA+PSBtaW4gJiYgbmV4dFZhbHVlIDw9IG1heCkge1xuICAgICAgICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZUNvbnRhaW5lclthdHRyaWJ1dGVdID0gbmV4dFZhbHVlO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZUNvbnRhaW5lci5zdGFydEdhbWUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcGxheUF1ZGlvID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB1cmwgPSAnaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2ZyZWVjb2RlY2FtcC9kcnVtcy9IZWF0ZXItMS5tcDMnO1xuICAgICAgICBuZXcgQXVkaW8odXJsKS5wbGF5KCk7XG4gICAgfVxuXG4gICAgYWRkU291bmRDb250cm9sID0gKGdhbWUpID0+IHtcbiAgICAgICAgY29uc3QgdGV4dCA9IHRoaXMuZ2FtZUNvbnRhaW5lci5zb3VuZEVuYWJsZWQgPyAnbXV0ZScgOiAndW5tdXRlJztcbiAgICAgICAgY29uc3QgYnRuID0gdGhpcy5nZW5lcmF0ZUVsKCdkaXYnLCBbJ211dGUnXSwgdGV4dCwgdGhpcy5yb290RWwpO1xuICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmdhbWVDb250YWluZXIuc291bmRFbmFibGVkID0gIXRoaXMuZ2FtZUNvbnRhaW5lci5zb3VuZEVuYWJsZWQ7XG4gICAgICAgICAgICB0aGlzLmRyYXcoZ2FtZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGRyYXdMYWRkZXIgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc3RhdGUgfSA9IHRoaXMuZ2FtZUNvbnRhaW5lci5sYWRkZXI7XG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSB0aGlzLmdlbmVyYXRlRWwoJ2RpdicsIFsnbGFkZGVyJ10sICdCZXN0IFJlc3VsdCcsIHRoaXMucm9vdEVsKTtcblxuICAgICAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiBzdGF0ZSkge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUVsKCdkaXYnLCBbJ3Njb3JlJ10sIGBUdXJuOiAke3Jlc3VsdC5tb3Zlc30gVGltZTogJHtwYXJzZUludCgocmVzdWx0LnRpbWUgLyAzNjAwIC8gNjAgLyAyNCkgJSAyNCwgMTApfWggJHtwYXJzZUludCgocmVzdWx0LnRpbWUgLyAxMDAwIC8gNjApICUgNjAsIDEwKX1tICR7cGFyc2VJbnQoKHJlc3VsdC50aW1lIC8gMTAwMCkgJSA2MCwgMTApfXNgLCByZXN1bHRzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZFRpbWUgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMudGltZXJFbC5pbm5lckhUTUwgPSB0aGlzLmZvcm1hdFRpbWUoKTtcbiAgICB9XG5cbiAgICB6ZXJvID0gKG51bWJlcikgPT4gKHBhcnNlSW50KG51bWJlciwgMTApIDwgMTAgPyAnMCcgOiAnJykgKyBudW1iZXJcblxuICAgIGZvcm1hdFRpbWUgPSAoZ2FtZSkgPT4ge1xuICAgICAgICBsZXQgZGVsdGE7XG4gICAgICAgIGlmIChnYW1lICYmIGdhbWUuc29sdmVkKSB7XG4gICAgICAgICAgICBkZWx0YSA9IGdhbWUuc29sdmVkVGltZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJuZXRUaW1lID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGRlbHRhID0gY3Vycm5ldFRpbWUgLSB0aGlzLmdhbWVTdGFydDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGggPSBwYXJzZUludCgoZGVsdGEgLyAzNjAwIC8gNjAgLyAyNCkgJSAyNCwgMTApO1xuICAgICAgICBjb25zdCBtID0gcGFyc2VJbnQoKGRlbHRhIC8gMTAwMCAvIDYwKSAlIDYwLCAxMCk7XG4gICAgICAgIGNvbnN0IHMgPSBwYXJzZUludCgoZGVsdGEgLyAxMDAwKSAlIDYwLCAxMCk7XG5cbiAgICAgICAgcmV0dXJuIGBUaW1lOiAke3RoaXMuemVybyhoKX06JHt0aGlzLnplcm8obSl9OiR7dGhpcy56ZXJvKHMpfWA7XG4gICAgfVxuXG4gICAgY2xlYXIgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMucm9vdEVsLmlubmVySFRNTCA9ICcnO1xuICAgICAgICBpZiAodGhpcy50aW1lcikgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTtcbiAgICB9O1xufVxuIiwiZnVuY3Rpb24gc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKG5hbWUsIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG59XG5cbmZ1bmN0aW9uIGdldChuYW1lLCBzdWJzdCA9IG51bGwpIHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0obmFtZSkgfHwgc3Vic3QpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMYWRkZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnN0YXRlID0gZ2V0KCdsYWRkZXInLCAnW10nKTtcbiAgICAgICAgdGhpcy5tYXggPSAxMDtcbiAgICB9XG5cbiAgICBhZGROZXdSZXN1bHQgPSAobW92ZXMsIHRpbWUpID0+IHtcbiAgICAgICAgdGhpcy5zdGF0ZS5wdXNoKHsgbW92ZXMsIHRpbWUgfSk7XG4gICAgICAgIHRoaXMuc3RhdGUuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgaWYgKGEubW92ZXMgPT09IGIubW92ZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYS50aW1lIC0gYi50aW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGEubW92ZXMgLSBiLm1vdmVzO1xuICAgICAgICB9KTtcbiAgICAgICAgd2hpbGUgKHRoaXMuc3RhdGUubGVuZ3RoID4gdGhpcy5tYXgpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUucG9wKCk7XG4gICAgICAgIH1cblxuICAgICAgICBzZXQoJ2xhZGRlcicsIHRoaXMuc3RhdGUpO1xuICAgIH1cbn1cbiIsImltcG9ydCBHYW1lIGZyb20gJy4vZ2VtLXB1enpsZSc7XG5pbXBvcnQgVWkgZnJvbSAnLi9nZW0tdWknO1xuaW1wb3J0IExhZGRlciBmcm9tICcuL2xhZGRlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVDb250YWluZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnVpID0gbmV3IFVpKCdyb290RWwnLCB0aGlzKTtcbiAgICAgICAgdGhpcy53aWR0aCA9IDQ7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gNDtcbiAgICAgICAgdGhpcy5zb3VuZEVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5sYWRkZXIgPSBuZXcgTGFkZGVyKCk7XG4gICAgICAgIHRoaXMuc3RhcnRHYW1lKCk7XG4gICAgfVxuXG4gICAgc3RhcnRHYW1lID0gKCkgPT4ge1xuICAgICAgICB0aGlzLmdhbWVNYWluID0gbmV3IEdhbWUodGhpcy53aWR0aCwgdGhpcy5oZWlnaHQsIHRoaXMudWksIHRoaXMpO1xuICAgIH1cbn1cbiIsImltcG9ydCAnLi4vc3R5bGVzL2Nzcy9zdHlsZS5jc3MnO1xuaW1wb3J0ICcuLi9zdHlsZXMvc2Nzcy9tYWluLnNjc3MnO1xuLy8gaW1wb3J0IGltYWdlcyBmcm9tIFwiLi4vYXNzZXRzL2ltYWdlL2JnLnBuZ1wiO1xuaW1wb3J0IEdhbWVDb250YWluZXIgZnJvbSAnLi9nYW1lQ29udGFpbmVyJztcblxuY29uc3QgZ2FtZUNvbnRhaW5lciA9IG5ldyBHYW1lQ29udGFpbmVyKCk7XG5jb25zb2xlLmxvZyhnYW1lQ29udGFpbmVyKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')}]);